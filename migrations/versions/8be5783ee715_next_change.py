"""next change

Revision ID: 8be5783ee715
Revises: b8c1a7524d57
Create Date: 2025-08-12 20:18:50.957991

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8be5783ee715'
down_revision: Union[str, Sequence[str], None] = 'b8c1a7524d57'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # Step 1: Add as nullable first
    # op.add_column('documents', sa.Column('file_name', sa.String(length=255), nullable=True))
    # op.add_column('documents', sa.Column('created_at', sa.DateTime(), nullable=True))
    # op.add_column('documents', sa.Column('updated_at', sa.DateTime(), nullable=True))

    # Fill default value for existing rows
    op.execute("UPDATE documents SET file_name = 'default_name' WHERE file_name IS NULL")

    # Step 2: Make NOT NULL after filling
    op.alter_column('documents', 'file_name', nullable=False)

    op.alter_column('documents', 'document_type',
               existing_type=postgresql.ENUM('CNIC', 'UTILITY_BILL', 'BUSINESS_LICENSE', 'OTHER', name='documenttype'),
               type_=sa.String(length=50),
               existing_nullable=False)
    op.alter_column('documents', 'ai_kpi_score',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sa.Integer(),
               existing_nullable=True)
    op.alter_column('documents', 'ai_remarks',
               existing_type=sa.TEXT(),
               type_=sa.String(length=500),
               existing_nullable=True)
    op.create_index(op.f('ix_documents_user_id'), 'documents', ['user_id'], unique=False)
    op.drop_constraint(op.f('documents_user_id_fkey'), 'documents', type_='foreignkey')
    op.drop_column('documents', 'uploaded_at')



def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # op.add_column('documents', sa.Column('uploaded_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.create_foreign_key(op.f('documents_user_id_fkey'), 'documents', 'users', ['user_id'], ['id'])
    op.drop_index(op.f('ix_documents_user_id'), table_name='documents')
    op.alter_column('documents', 'ai_remarks',
               existing_type=sa.String(length=500),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('documents', 'ai_kpi_score',
               existing_type=sa.Integer(),
               type_=sa.DOUBLE_PRECISION(precision=53),
               existing_nullable=True)
    op.alter_column('documents', 'document_type',
               existing_type=sa.String(length=50),
               type_=postgresql.ENUM('CNIC', 'UTILITY_BILL', 'BUSINESS_LICENSE', 'OTHER', name='documenttype'),
               existing_nullable=False)
    op.drop_column('documents', 'updated_at')
    op.drop_column('documents', 'created_at')
    op.drop_column('documents', 'file_name')
    # ### end Alembic commands ###
