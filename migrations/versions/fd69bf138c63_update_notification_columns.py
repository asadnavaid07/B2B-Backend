"""update notification columns

Revision ID: fd69bf138c63
Revises: 79188a31f182
Create Date: 2025-08-27 23:40:22.109060

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'fd69bf138c63'
down_revision: Union[str, Sequence[str], None] = '79188a31f182'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('notifications', sa.Column('admin_id', sa.Integer(), nullable=False))
    op.add_column('notifications', sa.Column('target_type', sa.Enum('ALL_USERS', 'SUB_ADMINS', 'BUYERS', 'VENDORS', name='notificationtargettype'), nullable=False))
    op.add_column('notifications', sa.Column('visibility', sa.Boolean(), nullable=False))
    op.add_column('notifications', sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.alter_column('notifications', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=True)
    op.drop_index(op.f('ix_notifications_user_id'), table_name='notifications')
    op.create_foreign_key(None, 'notifications', 'users', ['admin_id'], ['id'])
    op.drop_column('notifications', 'user_id')
    op.drop_column('notifications', 'is_read')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('notifications', sa.Column('is_read', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('notifications', sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'notifications', type_='foreignkey')
    op.create_index(op.f('ix_notifications_user_id'), 'notifications', ['user_id'], unique=False)
    op.alter_column('notifications', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=False)
    op.drop_column('notifications', 'updated_at')
    op.drop_column('notifications', 'visibility')
    op.drop_column('notifications', 'target_type')
    op.drop_column('notifications', 'admin_id')
    # ### end Alembic commands ###
