"""add retention_start_date to users

Revision ID: 6a5712c50df2
Revises: 6d3c525e597a
Create Date: 2025-08-20 16:28:52.532533

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '6a5712c50df2'
down_revision: Union[str, Sequence[str], None] = '6d3c525e597a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_profiles')
    op.add_column('users', sa.Column('retention_start_date', sa.DateTime(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'retention_start_date')
    op.create_table('user_profiles',
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('dob', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('cnic_passport', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('phone_number', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('business_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('business_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('business_reg_number', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('business_address', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('business_phone', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('website', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('socials', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('user_profiles_user_id_fkey')),
    sa.PrimaryKeyConstraint('user_id', name=op.f('user_profiles_pkey'))
    )
    # ### end Alembic commands ###
